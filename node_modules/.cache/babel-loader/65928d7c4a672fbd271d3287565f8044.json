{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\angel\\\\OneDrive\\\\Escritorio\\\\My Proyects\\\\Snake\\\\src\\\\App.js\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useInterval } from \"./useInterval\";\nimport { CANVAS_SIZE, SNAKE_START, COIN_START, SCALE, SPEED, DIRECTIONS } from \"./constants\";\n\nconst App = () => {\n  const canvasRef = useRef();\n  const [snake, setSnake] = useState(SNAKE_START);\n  const [coin, setCoin] = useState(COIN_START);\n  const [dir, setDir] = useState([0, -1]);\n  const [speed, setSpeed] = useState();\n  const [gameOver, setGameOver] = useState(false);\n  const [points, setPoints] = useState(0);\n\n  const startGame = () => {};\n\n  const endGame = () => {};\n\n  const moveSnake = ({\n    keyCode\n  }) => {\n    if (keyCode => 37 && keyCode <= 40) setDir(DIRECTIONS[keyCode]);\n  };\n\n  const createCoin = () => {};\n\n  const checkCollision = () => {};\n\n  const checkCoinCollision = () => {};\n\n  const gameLoop = () => {};\n\n  const countPoints = () => {};\n\n  useEffect(() => {\n    const context = canvasRef.current.getContext(\"2d\");\n    context.setTransform(SCALE, 0, 0, SCALE, 0, 0);\n    context.clearRect(0, 0, CANVAS_SIZE[0], CANVAS_SIZE[1]);\n    context.fillStyle = \"#27f208\";\n    snake.forEach(([x, y]) => context.fillRect(x, y, 0.5, 1));\n    context.fillStyle = \"#f2c508\";\n    context.fillRect(coin[0], coin[1], 0.5, 1);\n  }, [snake, coin, gameOver]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    role: \"button\",\n    tabIndex: \"0\",\n    onKeyDown: e => moveSnake(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"canvas\", {\n    style: {\n      border: \"1px solid black\",\n      backgroundColor: \"#D3D3D3\"\n    },\n    ref: canvasRef,\n    width: `${CANVAS_SIZE[0]}px`,\n    height: `${CANVAS_SIZE[1]}px`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), gameOver && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 20\n    }\n  }, \"Game Over!\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: startGame,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Start Game\"));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/angel/OneDrive/Escritorio/My Proyects/Snake/src/App.js"],"names":["React","useState","useRef","useEffect","useInterval","CANVAS_SIZE","SNAKE_START","COIN_START","SCALE","SPEED","DIRECTIONS","App","canvasRef","snake","setSnake","coin","setCoin","dir","setDir","speed","setSpeed","gameOver","setGameOver","points","setPoints","startGame","endGame","moveSnake","keyCode","createCoin","checkCollision","checkCoinCollision","gameLoop","countPoints","context","current","getContext","setTransform","clearRect","fillStyle","forEach","x","y","fillRect","e","border","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useInterval } from \"./useInterval\";\r\nimport {\r\n  CANVAS_SIZE,\r\n  SNAKE_START,\r\n  COIN_START,\r\n  SCALE,\r\n  SPEED,\r\n  DIRECTIONS,\r\n} from \"./constants\";\r\n\r\nconst App = () => {\r\n  const canvasRef = useRef();\r\n  const [snake, setSnake] = useState(SNAKE_START);\r\n  const [coin, setCoin] = useState(COIN_START);\r\n  const [dir, setDir] = useState([0, -1]);\r\n  const [speed, setSpeed] = useState();\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [points, setPoints] = useState(0);\r\n\r\n  const startGame = () => {};\r\n\r\n  const endGame = () => {};\r\n\r\n  const moveSnake = ({ keyCode }) => {\r\n      if(keyCode => 37 && keyCode <= 40) setDir(DIRECTIONS[keyCode]);\r\n  }\r\n     \r\n\r\n  const createCoin = () => {};\r\n\r\n  const checkCollision = () => {};\r\n\r\n  const checkCoinCollision = () => {};\r\n\r\n  const gameLoop = () => {};\r\n\r\n  const countPoints = () => {};\r\n\r\n  useEffect(() => {\r\n    const context = canvasRef.current.getContext(\"2d\");\r\n    context.setTransform(SCALE, 0, 0, SCALE, 0, 0);\r\n    context.clearRect(0, 0, CANVAS_SIZE[0], CANVAS_SIZE[1]);\r\n    context.fillStyle = \"#27f208\";\r\n    snake.forEach(([x, y]) => context.fillRect(x, y, 0.5, 1));\r\n    context.fillStyle = \"#f2c508\";\r\n    context.fillRect(coin[0], coin[1], 0.5, 1);\r\n  }, [snake, coin, gameOver]);\r\n\r\n  return (\r\n    <div role=\"button\" tabIndex=\"0\" onKeyDown={(e) => moveSnake(e)}>\r\n      <canvas\r\n        style={{ border: \"1px solid black\", backgroundColor: \"#D3D3D3\" }}\r\n        ref={canvasRef}\r\n        width={`${CANVAS_SIZE[0]}px`}\r\n        height={`${CANVAS_SIZE[1]}px`}\r\n      />\r\n      {gameOver && <div>Game Over!</div>}\r\n      <button onClick={startGame}>Start Game</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}